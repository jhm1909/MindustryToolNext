import { Suspense } from 'react';

import ColorText from '@/components/common/color-text';
import ErrorScreen from '@/components/common/error-screen';
import Tran from '@/components/common/tran';
import { ContextMenu, ContextMenuContent, ContextMenuItem, ContextMenuTrigger } from '@/components/ui/context-menu';
import { Skeleton } from '@/components/ui/skeleton';
import IdUserCard from '@/components/user/id-user-card';

import { serverApi } from '@/action/action';
import { isError } from '@/lib/utils';
import { getServerPlayers } from '@/query/server';
import { Player } from '@/types/response/Player';

type PlayersCardProps = {
  id: string;
};

const localeToFlag: Record<string, string> = {
  AD: 'ðŸ‡¦ðŸ‡©',
  AE: 'ðŸ‡¦ðŸ‡ª',
  AF: 'ðŸ‡¦ðŸ‡«',
  AG: 'ðŸ‡¦ðŸ‡¬',
  AI: 'ðŸ‡¦ðŸ‡®',
  AL: 'ðŸ‡¦ðŸ‡±',
  AM: 'ðŸ‡¦ðŸ‡²',
  AO: 'ðŸ‡¦ðŸ‡´',
  AQ: 'ðŸ‡¦ðŸ‡¶',
  AR: 'ðŸ‡¦ðŸ‡·',
  AS: 'ðŸ‡¦ðŸ‡¸',
  AT: 'ðŸ‡¦ðŸ‡¹',
  AU: 'ðŸ‡¦ðŸ‡º',
  AW: 'ðŸ‡¦ðŸ‡¼',
  AX: 'ðŸ‡¦ðŸ‡½',
  AZ: 'ðŸ‡¦ðŸ‡¿',
  BA: 'ðŸ‡§ðŸ‡¦',
  BB: 'ðŸ‡§ðŸ‡§',
  BD: 'ðŸ‡§ðŸ‡©',
  BE: 'ðŸ‡§ðŸ‡ª',
  BF: 'ðŸ‡§ðŸ‡«',
  BG: 'ðŸ‡§ðŸ‡¬',
  BH: 'ðŸ‡§ðŸ‡­',
  BI: 'ðŸ‡§ðŸ‡®',
  BJ: 'ðŸ‡§ðŸ‡¯',
  BL: 'ðŸ‡§ðŸ‡±',
  BM: 'ðŸ‡§ðŸ‡²',
  BN: 'ðŸ‡§ðŸ‡³',
  BO: 'ðŸ‡§ðŸ‡´',
  BQ: 'ðŸ‡§ðŸ‡¶',
  BR: 'ðŸ‡§ðŸ‡·',
  BS: 'ðŸ‡§ðŸ‡¸',
  BT: 'ðŸ‡§ðŸ‡¹',
  BV: 'ðŸ‡§ðŸ‡»',
  BW: 'ðŸ‡§ðŸ‡¼',
  BY: 'ðŸ‡§ðŸ‡¾',
  BZ: 'ðŸ‡§ðŸ‡¿',
  CA: 'ðŸ‡¨ðŸ‡¦',
  CC: 'ðŸ‡¨ðŸ‡¨',
  CD: 'ðŸ‡¨ðŸ‡©',
  CF: 'ðŸ‡¨ðŸ‡«',
  CG: 'ðŸ‡¨ðŸ‡¬',
  CH: 'ðŸ‡¨ðŸ‡­',
  CI: 'ðŸ‡¨ðŸ‡®',
  CK: 'ðŸ‡¨ðŸ‡°',
  CL: 'ðŸ‡¨ðŸ‡±',
  CM: 'ðŸ‡¨ðŸ‡²',
  CN: 'ðŸ‡¨ðŸ‡³',
  CO: 'ðŸ‡¨ðŸ‡´',
  CR: 'ðŸ‡¨ðŸ‡·',
  CU: 'ðŸ‡¨ðŸ‡º',
  CV: 'ðŸ‡¨ðŸ‡»',
  CW: 'ðŸ‡¨ðŸ‡¼',
  CX: 'ðŸ‡¨ðŸ‡½',
  CY: 'ðŸ‡¨ðŸ‡¾',
  CZ: 'ðŸ‡¨ðŸ‡¿',
  DE: 'ðŸ‡©ðŸ‡ª',
  DJ: 'ðŸ‡©ðŸ‡¯',
  DK: 'ðŸ‡©ðŸ‡°',
  DM: 'ðŸ‡©ðŸ‡²',
  DO: 'ðŸ‡©ðŸ‡´',
  DZ: 'ðŸ‡©ðŸ‡¿',
  EC: 'ðŸ‡ªðŸ‡¨',
  EE: 'ðŸ‡ªðŸ‡ª',
  EG: 'ðŸ‡ªðŸ‡¬',
  EH: 'ðŸ‡ªðŸ‡­',
  ER: 'ðŸ‡ªðŸ‡·',
  ES: 'ðŸ‡ªðŸ‡¸',
  ET: 'ðŸ‡ªðŸ‡¹',
  FI: 'ðŸ‡«ðŸ‡®',
  FJ: 'ðŸ‡«ðŸ‡¯',
  FK: 'ðŸ‡«ðŸ‡°',
  FM: 'ðŸ‡«ðŸ‡²',
  FO: 'ðŸ‡«ðŸ‡´',
  FR: 'ðŸ‡«ðŸ‡·',
  GA: 'ðŸ‡¬ðŸ‡¦',
  GB: 'ðŸ‡¬ðŸ‡§',
  GD: 'ðŸ‡¬ðŸ‡©',
  GE: 'ðŸ‡¬ðŸ‡ª',
  GF: 'ðŸ‡¬ðŸ‡«',
  GG: 'ðŸ‡¬ðŸ‡¬',
  GH: 'ðŸ‡¬ðŸ‡­',
  GI: 'ðŸ‡¬ðŸ‡®',
  GL: 'ðŸ‡¬ðŸ‡±',
  GM: 'ðŸ‡¬ðŸ‡²',
  GN: 'ðŸ‡¬ðŸ‡³',
  GP: 'ðŸ‡¬ðŸ‡µ',
  GQ: 'ðŸ‡¬ðŸ‡¶',
  GR: 'ðŸ‡¬ðŸ‡·',
  GS: 'ðŸ‡¬ðŸ‡¸',
  GT: 'ðŸ‡¬ðŸ‡¹',
  GU: 'ðŸ‡¬ðŸ‡º',
  GW: 'ðŸ‡¬ðŸ‡¼',
  GY: 'ðŸ‡¬ðŸ‡¾',
  HK: 'ðŸ‡­ðŸ‡°',
  HM: 'ðŸ‡­ðŸ‡²',
  HN: 'ðŸ‡­ðŸ‡³',
  HR: 'ðŸ‡­ðŸ‡·',
  HT: 'ðŸ‡­ðŸ‡¹',
  HU: 'ðŸ‡­ðŸ‡º',
  ID: 'ðŸ‡®ðŸ‡©',
  IE: 'ðŸ‡®ðŸ‡ª',
  IL: 'ðŸ‡®ðŸ‡±',
  IM: 'ðŸ‡®ðŸ‡²',
  IN: 'ðŸ‡®ðŸ‡³',
  IO: 'ðŸ‡®ðŸ‡´',
  IQ: 'ðŸ‡®ðŸ‡¶',
  IR: 'ðŸ‡®ðŸ‡·',
  IS: 'ðŸ‡®ðŸ‡¸',
  IT: 'ðŸ‡®ðŸ‡¹',
  JE: 'ðŸ‡¯ðŸ‡ª',
  JM: 'ðŸ‡¯ðŸ‡²',
  JO: 'ðŸ‡¯ðŸ‡´',
  JP: 'ðŸ‡¯ðŸ‡µ',
  KE: 'ðŸ‡°ðŸ‡ª',
  KG: 'ðŸ‡°ðŸ‡¬',
  KH: 'ðŸ‡°ðŸ‡­',
  KI: 'ðŸ‡°ðŸ‡®',
  KM: 'ðŸ‡°ðŸ‡²',
  KN: 'ðŸ‡°ðŸ‡³',
  KP: 'ðŸ‡°ðŸ‡µ',
  KR: 'ðŸ‡°ðŸ‡·',
  KW: 'ðŸ‡°ðŸ‡¼',
  KY: 'ðŸ‡°ðŸ‡¾',
  KZ: 'ðŸ‡°ðŸ‡¿',
  LA: 'ðŸ‡±ðŸ‡¦',
  LB: 'ðŸ‡±ðŸ‡§',
  LC: 'ðŸ‡±ðŸ‡¨',
  LI: 'ðŸ‡±ðŸ‡®',
  LK: 'ðŸ‡±ðŸ‡°',
  LR: 'ðŸ‡±ðŸ‡·',
  LS: 'ðŸ‡±ðŸ‡¸',
  LT: 'ðŸ‡±ðŸ‡¹',
  LU: 'ðŸ‡±ðŸ‡º',
  LV: 'ðŸ‡±ðŸ‡»',
  LY: 'ðŸ‡±ðŸ‡¾',
  MA: 'ðŸ‡²ðŸ‡¦',
  MC: 'ðŸ‡²ðŸ‡¨',
  MD: 'ðŸ‡²ðŸ‡©',
  ME: 'ðŸ‡²ðŸ‡ª',
  MF: 'ðŸ‡²ðŸ‡«',
  MG: 'ðŸ‡²ðŸ‡¬',
  MH: 'ðŸ‡²ðŸ‡­',
  MK: 'ðŸ‡²ðŸ‡°',
  ML: 'ðŸ‡²ðŸ‡±',
  MM: 'ðŸ‡²ðŸ‡²',
  MN: 'ðŸ‡²ðŸ‡³',
  MO: 'ðŸ‡²ðŸ‡´',
  MP: 'ðŸ‡²ðŸ‡µ',
  MQ: 'ðŸ‡²ðŸ‡¶',
  MR: 'ðŸ‡²ðŸ‡·',
  MS: 'ðŸ‡²ðŸ‡¸',
  MT: 'ðŸ‡²ðŸ‡¹',
  MU: 'ðŸ‡²ðŸ‡º',
  MV: 'ðŸ‡²ðŸ‡»',
  MW: 'ðŸ‡²ðŸ‡¼',
  MX: 'ðŸ‡²ðŸ‡½',
  MY: 'ðŸ‡²ðŸ‡¾',
  MZ: 'ðŸ‡²ðŸ‡¿',
  NA: 'ðŸ‡³ðŸ‡¦',
  NC: 'ðŸ‡³ðŸ‡¨',
  NE: 'ðŸ‡³ðŸ‡ª',
  NF: 'ðŸ‡³ðŸ‡«',
  NG: 'ðŸ‡³ðŸ‡¬',
  NI: 'ðŸ‡³ðŸ‡®',
  NL: 'ðŸ‡³ðŸ‡±',
  NO: 'ðŸ‡³ðŸ‡´',
  NP: 'ðŸ‡³ðŸ‡µ',
  NR: 'ðŸ‡³ðŸ‡·',
  NU: 'ðŸ‡³ðŸ‡º',
  NZ: 'ðŸ‡³ðŸ‡¿',
  OM: 'ðŸ‡´ðŸ‡²',
  PA: 'ðŸ‡µðŸ‡¦',
  PE: 'ðŸ‡µðŸ‡ª',
  PF: 'ðŸ‡µðŸ‡«',
  PG: 'ðŸ‡µðŸ‡¬',
  PH: 'ðŸ‡µðŸ‡­',
  PK: 'ðŸ‡µðŸ‡°',
  PL: 'ðŸ‡µðŸ‡±',
  PM: 'ðŸ‡µðŸ‡²',
  PN: 'ðŸ‡µðŸ‡³',
  PR: 'ðŸ‡µðŸ‡·',
  PS: 'ðŸ‡µðŸ‡¸',
  PT: 'ðŸ‡µðŸ‡¹',
  PW: 'ðŸ‡µðŸ‡¼',
  PY: 'ðŸ‡µðŸ‡¾',
  QA: 'ðŸ‡¶ðŸ‡¦',
  RE: 'ðŸ‡·ðŸ‡ª',
  RO: 'ðŸ‡·ðŸ‡´',
  RS: 'ðŸ‡·ðŸ‡¸',
  RU: 'ðŸ‡·ðŸ‡º',
  RW: 'ðŸ‡·ðŸ‡¼',
  SA: 'ðŸ‡¸ðŸ‡¦',
  SB: 'ðŸ‡¸ðŸ‡§',
  SC: 'ðŸ‡¸ðŸ‡¨',
  SD: 'ðŸ‡¸ðŸ‡©',
  SE: 'ðŸ‡¸ðŸ‡ª',
  SG: 'ðŸ‡¸ðŸ‡¬',
  SH: 'ðŸ‡¸ðŸ‡­',
  SI: 'ðŸ‡¸ðŸ‡®',
  SJ: 'ðŸ‡¸ðŸ‡¯',
  SK: 'ðŸ‡¸ðŸ‡°',
  SL: 'ðŸ‡¸ðŸ‡±',
  SM: 'ðŸ‡¸ðŸ‡²',
  SN: 'ðŸ‡¸ðŸ‡³',
  SO: 'ðŸ‡¸ðŸ‡´',
  SR: 'ðŸ‡¸ðŸ‡·',
  SS: 'ðŸ‡¸ðŸ‡¸',
  ST: 'ðŸ‡¸ðŸ‡¹',
  SV: 'ðŸ‡¸ðŸ‡»',
  SX: 'ðŸ‡¸ðŸ‡½',
  SY: 'ðŸ‡¸ðŸ‡¾',
  SZ: 'ðŸ‡¸ðŸ‡¿',
  TC: 'ðŸ‡¹ðŸ‡¨',
  TD: 'ðŸ‡¹ðŸ‡©',
  TF: 'ðŸ‡¹ðŸ‡«',
  TG: 'ðŸ‡¹ðŸ‡¬',
  TH: 'ðŸ‡¹ðŸ‡­',
  TJ: 'ðŸ‡¹ðŸ‡¯',
  TK: 'ðŸ‡¹ðŸ‡°',
  TL: 'ðŸ‡¹ðŸ‡±',
  TM: 'ðŸ‡¹ðŸ‡²',
  TN: 'ðŸ‡¹ðŸ‡³',
  TO: 'ðŸ‡¹ðŸ‡´',
  TR: 'ðŸ‡¹ðŸ‡·',
  TT: 'ðŸ‡¹ðŸ‡¹',
  TV: 'ðŸ‡¹ðŸ‡»',
  TW: 'ðŸ‡¹ðŸ‡¼',
  TZ: 'ðŸ‡¹ðŸ‡¿',
  UA: 'ðŸ‡ºðŸ‡¦',
  UG: 'ðŸ‡ºðŸ‡¬',
  UM: 'ðŸ‡ºðŸ‡²',
  US: 'ðŸ‡ºðŸ‡¸',
  UY: 'ðŸ‡ºðŸ‡¾',
  UZ: 'ðŸ‡ºðŸ‡¿',
  VA: 'ðŸ‡»ðŸ‡¦',
  VC: 'ðŸ‡»ðŸ‡¨',
  VE: 'ðŸ‡»ðŸ‡ª',
  VG: 'ðŸ‡»ðŸ‡¬',
  VI: 'ðŸ‡»ðŸ‡®',
  VN: 'ðŸ‡»ðŸ‡³',
  VU: 'ðŸ‡»ðŸ‡º',
  WF: 'ðŸ‡¼ðŸ‡«',
  WS: 'ðŸ‡¼ðŸ‡¸',
  XK: 'ðŸ‡½ðŸ‡°',
  YE: 'ðŸ‡¾ðŸ‡ª',
  YT: 'ðŸ‡¾ðŸ‡¹',
  ZA: 'ðŸ‡¿ðŸ‡¦',
  ZM: 'ðŸ‡¿ðŸ‡²',
  ZW: 'ðŸ‡¿ðŸ‡¼',
};
export default localeToFlag;
export async function PlayersCard({ id }: PlayersCardProps) {
  const players = await serverApi((axios) => getServerPlayers(axios, id));
  if (isError(players)) {
    return <ErrorScreen error={players} />;
  }

  return (
    <div className="grid gap-1">
      {players
        .sort((a, b) => a.team.name.localeCompare(b.team.name))
        .map((player) => (
          <PlayerCard key={player.uuid} player={player} />
        ))}
    </div>
  );
}

type PlayersCardSkeletonProps = {
  players: number;
};
export function PlayersCardSkeleton({ players }: PlayersCardSkeletonProps) {
  if (players === 0) {
    return undefined;
  }

  return Array(players)
    .fill(1)
    .map((_, index) => <Skeleton className="h-10 w-24" key={index} />);
}

type PlayerCardProps = {
  player: Player;
};

function getCountryCode(locale: string): string {
  const parts = locale.split('_');
  return parts.length > 1 ? parts[1].toUpperCase() : parts[0].toUpperCase();
}
async function PlayerCard({ player: { locale, userId, name, team } }: PlayerCardProps) {
  locale = getCountryCode(locale ?? 'EN');

  return (
    <ContextMenu>
      <ContextMenuTrigger>
        <div className="flex flex-col justify-between gap-1 px-4 py-1 hover:bg-secondary">
          <div className="flex text-lg justify-between gap-1">
            <ColorText className="font-semibold" text={name} />
            {locale && (localeToFlag[locale] ?? locale)}
            {userId && <IdUserCard id={userId} />}
          </div>
          <div className="border-b-4" style={{ borderColor: `#${team.color}` }} />
        </div>
      </ContextMenuTrigger>
      <ContextMenuContent>
        <Suspense>
          <ContextMenuItem>
            <Tran text="player.info" />
          </ContextMenuItem>
          <ContextMenuItem variant="destructive">
            <Tran text="player.kick" />
          </ContextMenuItem>
          <ContextMenuItem variant="destructive">
            <Tran text="player.ban" />
          </ContextMenuItem>
        </Suspense>
      </ContextMenuContent>
    </ContextMenu>
  );
}
