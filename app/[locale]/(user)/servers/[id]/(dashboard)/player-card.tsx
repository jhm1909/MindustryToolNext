import ColorText from '@/components/common/color-text';
import ErrorScreen from '@/components/common/error-screen';
import Tran from '@/components/common/tran';
import { ContextMenu, ContextMenuContent, ContextMenuItem, ContextMenuTrigger } from '@/components/ui/context-menu';
import { Skeleton } from '@/components/ui/skeleton';
import IdUserCard from '@/components/user/id-user-card';

import { serverApi } from '@/action/action';
import { isError } from '@/lib/utils';
import { getServerPlayers } from '@/query/server';
import { Player } from '@/types/response/Player';

type PlayersCardProps = {
  id: string;
};

const localeToFlag: Record<string, string> = {
  en: 'ðŸ‡¬ðŸ‡§',
  en_US: 'ðŸ‡ºðŸ‡¸',
  be: 'ðŸ‡§ðŸ‡¾', // Belarus
  bg: 'ðŸ‡§ðŸ‡¬', // Bulgaria
  ca: 'ðŸ‡ªðŸ‡¸', // Catalonia (Spain)
  cs: 'ðŸ‡¨ðŸ‡¿', // Czech Republic
  cw: 'ðŸ‡¨ðŸ‡¼', // CuraÃ§ao
  da: 'ðŸ‡©ðŸ‡°', // Denmark
  de: 'ðŸ‡©ðŸ‡ª', // Germany
  de_DE: 'ðŸ‡©ðŸ‡ª', // Germany
  es: 'ðŸ‡ªðŸ‡¸', // Spain
  et: 'ðŸ‡ªðŸ‡ª', // Estonia
  eu: 'ðŸ‡ªðŸ‡¸', // Basque (Spain)
  fi: 'ðŸ‡«ðŸ‡®', // Finland
  fil: 'ðŸ‡µðŸ‡­', // Philippines
  fr: 'ðŸ‡«ðŸ‡·', // France
  hu: 'ðŸ‡­ðŸ‡º', // Hungary
  id_ID: 'ðŸ‡®ðŸ‡©', // Indonesia
  in_ID: 'ðŸ‡®ðŸ‡©', // Indonesia
  it: 'ðŸ‡®ðŸ‡¹', // Italy
  ja: 'ðŸ‡¯ðŸ‡µ', // Japan
  ko: 'ðŸ‡°ðŸ‡·', // South Korea
  lt: 'ðŸ‡±ðŸ‡¹', // Lithuania
  nl: 'ðŸ‡³ðŸ‡±', // Netherlands
  nl_BE: 'ðŸ‡§ðŸ‡ª', // Dutch (Belgium)
  pl: 'ðŸ‡µðŸ‡±', // Poland
  pt_BR: 'ðŸ‡§ðŸ‡·', // Brazil
  pt_PT: 'ðŸ‡µðŸ‡¹', // Portugal
  ro: 'ðŸ‡·ðŸ‡´', // Romania
  ru: 'ðŸ‡·ðŸ‡º', // Russia
  ru_KZ: 'ðŸ‡°ðŸ‡¿',
  sr: 'ðŸ‡·ðŸ‡¸', // Serbia
  sv: 'ðŸ‡¸ðŸ‡ª', // Sweden
  th: 'ðŸ‡¹ðŸ‡­', // Thailand
  tk: 'ðŸ‡¹ðŸ‡²', // Turkmenistan
  tr: 'ðŸ‡¹ðŸ‡·', // Turkey
  uk_UA: 'ðŸ‡ºðŸ‡¦', // Ukraine
  vi: 'ðŸ‡»ðŸ‡³', // Vietnam
  zh_CN: 'ðŸ‡¨ðŸ‡³', // China
  zh_TW: 'ðŸ‡¹ðŸ‡¼', // Taiwan
};

export default localeToFlag;

export async function PlayersCard({ id }: PlayersCardProps) {
  const players = await serverApi((axios) => getServerPlayers(axios, id));

  if (isError(players)) {
    return <ErrorScreen error={players} />;
  }

  return (
    <div className="grid gap-1">
      {players
        .sort((a, b) => a.team.name.localeCompare(b.team.name))
        .map((player) => (
          <PlayerCard key={player.uuid} player={player} />
        ))}
    </div>
  );
}

type PlayersCardSkeletonProps = {
  players: number;
};
export function PlayersCardSkeleton({ players }: PlayersCardSkeletonProps) {
  if (players === 0) {
    return undefined;
  }

  return Array(players)
    .fill(1)
    .map((_, index) => <Skeleton className="h-10 w-24" key={index} />);
}

type PlayerCardProps = {
  player: Player;
};
async function PlayerCard({ player: { locale, userId, name, team } }: PlayerCardProps) {
  return (
    <ContextMenu>
      <ContextMenuTrigger>
        <div className="flex flex-col justify-between gap-1 px-4 py-1 hover:bg-secondary">
          <div className="flex text-lg justify-between gap-1">
            <ColorText className="font-semibold" text={name} />
            {locale && (localeToFlag[locale] ?? locale)}
            {userId && <IdUserCard id={userId} />}
          </div>
          <div className="border-b-2" style={{ borderColor: `#${team.color}` }} />
        </div>
      </ContextMenuTrigger>
      <ContextMenuContent>
        <ContextMenuItem>
          <Tran text="player.info" />
        </ContextMenuItem>
        <ContextMenuItem variant="destructive">
          <Tran text="player.kick" />
        </ContextMenuItem>
        <ContextMenuItem variant="destructive">
          <Tran text="player.ban" />
        </ContextMenuItem>
      </ContextMenuContent>
    </ContextMenu>
  );
}
